import { PrismaService } from 'src/prisma/prisma.service';
import { RegisterRequest } from './dtos/RegisterRequest.dto';
import { MailerService } from '@nestjs-modules/mailer';
import { Userprofile } from './dtos/userprofile';
export declare class UsersService {
    private prisma;
    private mailerService;
    constructor(prisma: PrismaService, mailerService: MailerService);
    updateUser(userId: string, updateUserDto: any): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        email: string;
        firstname: string;
        lastname: string;
        address: string;
        birthday: string;
        degree: string;
        number: number;
        job: string;
        image: string;
        hash: string;
        hashedAt: string;
        hashedRt: string;
        roleId: string[];
        basicSalary: number;
        offDays: number;
        familySituation: number;
        childrenNumber: number;
        bankrib: string;
        numCnss: string;
        taskId: string[];
        projectIds: string[];
    }>;
    getUserById(id: string): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        email: string;
        firstname: string;
        lastname: string;
        address: string;
        birthday: string;
        degree: string;
        number: number;
        job: string;
        image: string;
        hash: string;
        hashedAt: string;
        hashedRt: string;
        roleId: string[];
        basicSalary: number;
        offDays: number;
        familySituation: number;
        childrenNumber: number;
        bankrib: string;
        numCnss: string;
        taskId: string[];
        projectIds: string[];
    }>;
    getUserByEmail(email: string): Promise<Userprofile>;
    deteteUser(id: string): import(".prisma/client").Prisma.PrismaPromise<import(".prisma/client").Prisma.BatchPayload>;
    addUser(registerRequest: RegisterRequest): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        email: string;
        firstname: string;
        lastname: string;
        address: string;
        birthday: string;
        degree: string;
        number: number;
        job: string;
        image: string;
        hash: string;
        hashedAt: string;
        hashedRt: string;
        roleId: string[];
        basicSalary: number;
        offDays: number;
        familySituation: number;
        childrenNumber: number;
        bankrib: string;
        numCnss: string;
        taskId: string[];
        projectIds: string[];
    }>;
    getUsers(): import(".prisma/client").Prisma.PrismaPromise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        email: string;
        firstname: string;
        lastname: string;
        address: string;
        birthday: string;
        degree: string;
        number: number;
        job: string;
        image: string;
        hash: string;
        hashedAt: string;
        hashedRt: string;
        roleId: string[];
        basicSalary: number;
        offDays: number;
        familySituation: number;
        childrenNumber: number;
        bankrib: string;
        numCnss: string;
        taskId: string[];
        projectIds: string[];
    }[]>;
    getUserAndPrivileges(email: string): Promise<{
        email: string;
        firstname: string;
        lastname: string;
        authorities: string[];
    }>;
    getUserPrivilegesByEmail(email: string): Promise<any[]>;
    assignRoleToUser(userId: string, roleId: string): Promise<{
        success: boolean;
        message: string;
    }>;
    hashData(data: string): Promise<string>;
    generatePassword(): string;
    sendMail(email: string, password: string): void;
}
